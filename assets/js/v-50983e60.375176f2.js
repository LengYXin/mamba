"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[772],{4890:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});const p=(0,a(6252).uE)('<h1 id="列表" tabindex="-1"><a class="header-anchor" href="#列表" aria-hidden="true">#</a> 列表</h1><details class="custom-container details"><summary>点击查看代码</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@author</span> 冷 (https://github.com/LengYXin)\n * <span class="token keyword">@email</span> lengyingxin8966@gmail.com\n * <span class="token keyword">@create</span> date 2021-08-23 11:20:15\n * <span class="token keyword">@modify</span> date 2021-08-23 11:20:15\n * <span class="token keyword">@desc</span> [列表数据管理 分页&amp;非分页&amp;瀑布流]\n */</span>\n<span class="token keyword">import</span> lodash <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BindAll <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash-decorators&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> toJS<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;mobx&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> catchError<span class="token punctuation">,</span> concatMap<span class="token punctuation">,</span> filter<span class="token punctuation">,</span> map<span class="token punctuation">,</span> <span class="token keyword">of</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> AjaxBasics<span class="token punctuation">,</span> IAjaxConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../helpers&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BaseModel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./baseModel&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> IBasesPaginationIAjaxConfig<span class="token punctuation">,</span> IBasesPaginationOptions<span class="token punctuation">,</span> IBasesResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./basesInterface&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasesOptions<span class="token punctuation">,</span> EnumActionKeys<span class="token punctuation">,</span> EnumBasesKeys <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./basesOptions&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasesUtils <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./basesUtils&#39;</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 基础 分页管理\n */</span>\n<span class="token decorator"><span class="token at operator">@</span><span class="token function">BindAll</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">BasesPagination<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n    <span class="token doc-comment comment">/**\n     * 基础 分页列表数据\n     * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IBasesPaginationOptions<span class="token punctuation">}</span> [options]\n     * <span class="token keyword">@memberof</span> BasesPagination\n     */</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> IBasesPaginationOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>Model <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BaseModel<span class="token operator">&lt;</span><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span><span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;list&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> options<span class="token operator">?.</span>listModel<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 默认的分页参数配置\n     * <span class="token keyword">@type</span> <span class="token punctuation">{</span>IBasesPaginationOptions<span class="token punctuation">}</span>\n     * <span class="token keyword">@memberof</span> BasesPagination\n     */</span>\n    <span class="token keyword">get</span> <span class="token function">defaultOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> IBasesPaginationOptions <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            pagination<span class="token operator">:</span> BasesOptions<span class="token punctuation">.</span>pagination<span class="token punctuation">,</span>\n            paginationParams<span class="token operator">:</span> BasesOptions<span class="token punctuation">.</span>paginationParams<span class="token punctuation">,</span>\n            infinite<span class="token operator">:</span> BasesOptions<span class="token punctuation">.</span>infinite<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 配置信息\n     * <span class="token keyword">@type</span> <span class="token punctuation">{</span>IBasesPaginationOptions<span class="token punctuation">}</span>\n     * <span class="token keyword">@memberof</span> BasesPagination\n     */</span>\n    <span class="token keyword">readonly</span> options<span class="token operator">:</span> IBasesPaginationOptions <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 分页数据模型\n     * <span class="token keyword">@memberof</span> Array&lt;T&gt;\n     */</span>\n    <span class="token keyword">readonly</span> Model<span class="token operator">:</span> BaseModel<span class="token operator">&lt;</span><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * AjaxConfig\n     * <span class="token keyword">@readonly</span>\n     * <span class="token keyword">@memberof</span> lodash.assign(basesOptions.pagination,this.options.pagination)\n     */</span>\n    <span class="token keyword">get</span> <span class="token function">AjaxConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> <span class="token punctuation">{</span> pagination <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">isString</span><span class="token punctuation">(</span>pagination<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            pagination <span class="token operator">=</span> <span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>pagination <span class="token punctuation">}</span> <span class="token keyword">as</span> IAjaxConfig\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> lodash<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span> target<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>target <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">.</span>pagination<span class="token punctuation">,</span> pagination<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * Pagination 参数配置\n     * <span class="token keyword">@readonly</span>\n     * <span class="token keyword">@memberof</span> lodash.assign(...)\n     */</span>\n    <span class="token keyword">get</span> <span class="token function">PaginationParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> lodash<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">.</span>paginationParams<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>paginationParams<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 当前请求的 生成时间戳\n     * <span class="token keyword">@readonly</span>\n     * <span class="token keyword">@memberof</span> [Model.getStorage(timestamp])]\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">timestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>timestamp<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 当前请求的 加载状态\n     * <span class="token keyword">@readonly</span>\n     * <span class="token keyword">@memberof</span> [Model.loading)]\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">loading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span>loading\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 请求的参数值 [AjaxConfig]\n     * <span class="token keyword">@readonly</span>\n     * <span class="token keyword">@memberof</span> [Model.getStorage(request])]\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>request<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 是否已加载完成，加载完成后不再触发\n     * <span class="token keyword">@readonly</span>\n     * <span class="token keyword">@memberof</span> BasesPagination\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">finished</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>finished<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 请求出错\n     * <span class="token keyword">@readonly</span>\n     * <span class="token keyword">@memberof</span> BasesPagination\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">requestError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>requestError<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 当前请求的 数据总数\n     * <span class="token keyword">@readonly</span>\n     * <span class="token keyword">@memberof</span> [Model.getStorage(response[PaginationParams.response.total])]\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">total</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>EnumBasesKeys<span class="token punctuation">.</span>response<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.total</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 当前请求的 页码索引\n     * <span class="token keyword">@readonly</span>\n     * <span class="token keyword">@memberof</span> [Model.getStorage(request.body[PaginationParams.currentKey])]\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> PaginationParams <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>EnumBasesKeys<span class="token punctuation">.</span>request<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.body.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>PaginationParams<span class="token punctuation">.</span>currentKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> PaginationParams<span class="token punctuation">.</span>defaultCurrent<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 分页请求的 每页条数\n     * <span class="token keyword">@readonly</span> \n     * <span class="token keyword">@memberof</span> [Model.getStorage(request.body[PaginationParams.pageSizeKey])]\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">pageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> PaginationParams <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>EnumBasesKeys<span class="token punctuation">.</span>request<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.body.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>PaginationParams<span class="token punctuation">.</span>pageSizeKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> PaginationParams<span class="token punctuation">.</span>defaultPageSize<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 分页数据 value \n     * <span class="token keyword">@readonly</span>\n     * <span class="token keyword">@memberof</span> [Model.value]\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">dataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span>value\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/** 第一个元素 */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">firstData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">toJS</span><span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">head</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span>obsValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/** 最后一个元素 */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">lastData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">toJS</span><span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span>obsValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 选择的行 \n     * <span class="token keyword">@readonly</span>\n     * <span class="token keyword">@memberof</span> BasesPagination\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">get</span> <span class="token function">selectedRowKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">getStorage</span><span class="token punctuation">(</span><span class="token string">&#39;selectedRowKeys&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 重置 配置\n     * <span class="token keyword">@param</span> <span class="token parameter">options</span> \n     */</span>\n    <span class="token function">reset</span><span class="token punctuation">(</span>options<span class="token operator">:</span> IBasesPaginationOptions <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// if (this.loading) {</span>\n        <span class="token comment">//     return BasesUtils.warning(`Pagination reset loading 未完成`);</span>\n        <span class="token comment">// }</span>\n        lodash<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOptions<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 加载数据\n     * <span class="token keyword">@param</span> <span class="token parameter">AjaxConfig</span> \n     */</span>\n    <span class="token keyword">async</span> <span class="token function">onLoad</span><span class="token punctuation">(</span>AjaxConfig<span class="token operator">?</span><span class="token operator">:</span> IBasesPaginationIAjaxConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loading<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">throw</span> <span class="token string">&quot;loading&quot;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>infinite <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>finished<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">throw</span> <span class="token string">&#39;finished&#39;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">const</span> timestamp <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">toggleLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>timestamp<span class="token punctuation">,</span> timestamp<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            AjaxConfig <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createAjaxConfig</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            lodash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> <span class="token string">&#39;headers.timestamp&#39;</span><span class="token punctuation">,</span> timestamp<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            BasesUtils<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Pagination onLoad </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> AjaxConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">const</span> obs <span class="token operator">=</span> AjaxBasics\n                <span class="token punctuation">.</span><span class="token generic-function"><span class="token function">requestObservable</span><span class="token generic class-name"><span class="token operator">&lt;</span>IBasesResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>\n                    <span class="token comment">// 过滤过期请求</span>\n                    <span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>timestamp<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>timestamp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            <span class="token keyword">return</span> <span class="token boolean">true</span>\n                        <span class="token punctuation">}</span>\n                        BasesUtils<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span>EnumActionKeys<span class="token punctuation">.</span>pagination <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 过期 &gt; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 最新 </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token comment">// 格式化返回数据</span>\n                    <span class="token function">concatMap</span><span class="token punctuation">(</span>response <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">const</span> <span class="token punctuation">{</span> valueGetter<span class="token punctuation">,</span> dataSource<span class="token punctuation">,</span> total<span class="token punctuation">,</span> current<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>response<span class="token punctuation">;</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>valueGetter<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">valueGetter</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> AjaxConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                            <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                                <span class="token keyword">return</span> res\n                            <span class="token punctuation">}</span>\n                            <span class="token keyword">return</span> <span class="token keyword">of</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n                        <span class="token punctuation">}</span>\n                        <span class="token keyword">return</span> <span class="token keyword">of</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                            current<span class="token operator">:</span> lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> current<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            pageSize<span class="token operator">:</span> lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            total<span class="token operator">:</span> lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> total<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            dataSource<span class="token operator">:</span> lodash<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token operator">?</span> response <span class="token operator">:</span> lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> dataSource<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                <span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> AjaxBasics<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">toPromise</span><span class="token generic class-name"><span class="token operator">&lt;</span>IBasesResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>obs<span class="token punctuation">,</span> AjaxConfig<span class="token punctuation">)</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>\n            <span class="token keyword">return</span> response\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>lodash<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;loading&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;finished&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">toggleLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>finished<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>requestError<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                BasesUtils<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>EnumActionKeys<span class="token punctuation">.</span>pagination<span class="token punctuation">,</span> error<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">throw</span> error\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 设置 response 数据\n     * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IBasesResponse<span class="token punctuation">}</span> response\n     * <span class="token keyword">@memberof</span> BasesPagination\n     */</span>\n    <span class="token function">set</span><span class="token punctuation">(</span>response<span class="token operator">:</span> IBasesResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            BasesUtils<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Pagination Set </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>requestError<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>response<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">const</span> size <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>finished<span class="token punctuation">,</span> size <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>infinite<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>finished <span class="token operator">&amp;&amp;</span> response<span class="token punctuation">.</span>total<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>finished<span class="token punctuation">,</span> lodash<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>total<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">toggleLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> response\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n    * 清理数据\n    */</span>\n    <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">toggleLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">clearStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 选择行数据\n     * <span class="token keyword">@param</span> <span class="token parameter">selectedRowKeys</span> \n     */</span>\n    <span class="token function">onSelectChange</span><span class="token punctuation">(</span>selectedRowKeys<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        BasesUtils<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Pagination selectedRowKeys</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span><span class="token string">&#39;selectedRowKeys&#39;</span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 对比请求参数是否相同请求参数\n     * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span> other\n     * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span> \n     * <span class="token keyword">@memberof</span> BasesPagination\n     */</span>\n    <span class="token function">eqRequestBody</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> body <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>request<span class="token punctuation">,</span> <span class="token string">&#39;body&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">false</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>filterKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            body <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>filterKey<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        body <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">pick</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> lodash<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> lodash<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> other<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 创建 onLoad AjaxConfig\n     * <span class="token keyword">@param</span> <span class="token parameter">AjaxConfig</span> \n     * <span class="token keyword">@returns</span> \n     */</span>\n    <span class="token keyword">private</span> <span class="token function">createAjaxConfig</span><span class="token punctuation">(</span>AjaxConfig<span class="token operator">:</span> IBasesPaginationIAjaxConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> Pagination <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">;</span>\n        AjaxConfig <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>AjaxConfig<span class="token punctuation">,</span> AjaxConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> currentKey <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">body.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>currentKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            pageSizeKey <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">body.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>pageSizeKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            filterKey <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">body.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>filterKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            current <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">head</span><span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n                <span class="token comment">// body 中的 current</span>\n                lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> currentKey<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token comment">// AjaxConfig 中的 current</span>\n                lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> <span class="token string">&#39;current&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token comment">// 当前使用 中的 current</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>current<span class="token punctuation">,</span>\n                <span class="token comment">// 默认 的 current</span>\n                Pagination<span class="token punctuation">.</span>defaultCurrent\n            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            pageSize <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">head</span><span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n                <span class="token comment">// body 中的 pageSize</span>\n                lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> pageSizeKey<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token comment">// AjaxConfig 中的 pageSize</span>\n                lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> <span class="token string">&#39;pageSize&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token comment">// 当前使用 中的 pageSize</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">,</span>\n                <span class="token comment">// 默认 的 pageSize</span>\n                Pagination<span class="token punctuation">.</span>defaultPageSize\n            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 无限滚动模式</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>infinite<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> infiniteKey <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">body.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>infiniteKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n            <span class="token keyword">const</span> lastKey <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDataKey</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lastData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            lodash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> infiniteKey<span class="token punctuation">,</span> lastKey<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// 存在参数 页码加一</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>lastKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                current <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            lodash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> currentKey<span class="token punctuation">,</span> lodash<span class="token punctuation">.</span><span class="token function">toInteger</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            lodash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> pageSizeKey<span class="token punctuation">,</span> lodash<span class="token punctuation">.</span><span class="token function">toInteger</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        lodash<span class="token punctuation">.</span><span class="token function">unset</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> <span class="token string">&#39;current&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        lodash<span class="token punctuation">.</span><span class="token function">unset</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> <span class="token string">&#39;pageSize&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>filterKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> body <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            lodash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> <span class="token string">&#39;body&#39;</span><span class="token punctuation">,</span> lodash<span class="token punctuation">.</span><span class="token function">pick</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token punctuation">[</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>currentKey<span class="token punctuation">,</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>pageSizeKey<span class="token punctuation">]</span>\n            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            lodash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">,</span> filterKey<span class="token punctuation">,</span> lodash<span class="token punctuation">.</span><span class="token function">omit</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token punctuation">[</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>currentKey<span class="token punctuation">,</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>PaginationParams<span class="token punctuation">.</span>pageSizeKey<span class="token punctuation">]</span>\n            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">setStorage</span><span class="token punctuation">(</span>EnumBasesKeys<span class="token punctuation">.</span>request<span class="token punctuation">,</span> lodash<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>AjaxConfig<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> AjaxConfig\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 获取 当前数据的 Key\n     * <span class="token keyword">@param</span> <span class="token parameter">entity</span> 数据对象\n     * <span class="token keyword">@param</span> <span class="token parameter">predicate</span> lodash predicate 参数 [dataKey,**]\n     * <span class="token keyword">@returns</span> dataKey\n     */</span>\n    <span class="token function">getDataKey</span><span class="token punctuation">(</span>entity<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> predicate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>lodash<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> entity\n        <span class="token punctuation">}</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span> dataKey <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> key <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>entity<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>dataKey<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>predicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">[</span>dataKey<span class="token punctuation">,</span> key<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> key\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 解析 Array&lt;entity...&gt; 为 对应的 Array&lt;dataKey...&gt;\n     * <span class="token keyword">@param</span> <span class="token parameter">entitys</span> \n     * <span class="token keyword">@returns</span> \n     */</span>\n    <span class="token function">getEntitys</span><span class="token punctuation">(</span>entitys<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">any</span> <span class="token operator">|</span> <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>entitys<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            entitys <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>entitys<span class="token punctuation">,</span> item <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDataKey</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>\n                <span class="token keyword">return</span> item\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            entitys <span class="token operator">=</span> <span class="token punctuation">[</span>lodash<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span>entitys<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDataKey</span><span class="token punctuation">(</span>entitys<span class="token punctuation">)</span> <span class="token operator">:</span> entitys<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> entitys\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 插入数据到 Model 中\n     * <span class="token keyword">@param</span> <span class="token punctuation">{</span>(T | Array&lt;T&gt;)<span class="token punctuation">}</span> entity\n     * <span class="token keyword">@memberof</span> BasesPagination\n     * <span class="token keyword">@returns</span> entity\n     */</span>\n    <span class="token function">onInsert</span><span class="token punctuation">(</span>entitys<span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> first<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>entitys<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>lodash<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span>entitys<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> entitys\n        <span class="token punctuation">}</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>entitys<span class="token punctuation">,</span> first<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> entitys\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 修改数组中的对象 根据 entity.dataKey 匹配\n     * <span class="token keyword">@param</span> <span class="token parameter">entity</span> 新的数据对象 dataKey 匹配集合中的对应数据\n     * <span class="token keyword">@param</span> <span class="token parameter">assign</span> 是否 assign 模式\n     * <span class="token keyword">@returns</span> entity\n     */</span>\n    <span class="token function">onUpdate</span><span class="token punctuation">(</span>entity<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> assign <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> path <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span>obsValue<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDataKey</span><span class="token punctuation">(</span>entity<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>old <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>assign<span class="token punctuation">)</span>\n                <span class="token keyword">return</span> lodash<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>old<span class="token punctuation">,</span> entity<span class="token punctuation">)</span>\n            <span class="token keyword">return</span> entity\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 删除数组中的对象 根据 entity.dataKey 匹配\n     * <span class="token keyword">@param</span> <span class="token parameter">entitys</span>  dataKey 匹配集合中的对应数据 entity | entity.dataKey | Arrar&lt;entity&gt; | Arrar&lt;entity.dataKey&gt; \n     * <span class="token keyword">@returns</span> 返回移除元素组成的新数组。\n     */</span>\n    <span class="token function">onDelete</span><span class="token punctuation">(</span>entitys<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">any</span> <span class="token operator">|</span> <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> lodash<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEntitys</span><span class="token punctuation">(</span>entitys<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDataKey</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br><span class="line-number">307</span><br><span class="line-number">308</span><br><span class="line-number">309</span><br><span class="line-number">310</span><br><span class="line-number">311</span><br><span class="line-number">312</span><br><span class="line-number">313</span><br><span class="line-number">314</span><br><span class="line-number">315</span><br><span class="line-number">316</span><br><span class="line-number">317</span><br><span class="line-number">318</span><br><span class="line-number">319</span><br><span class="line-number">320</span><br><span class="line-number">321</span><br><span class="line-number">322</span><br><span class="line-number">323</span><br><span class="line-number">324</span><br><span class="line-number">325</span><br><span class="line-number">326</span><br><span class="line-number">327</span><br><span class="line-number">328</span><br><span class="line-number">329</span><br><span class="line-number">330</span><br><span class="line-number">331</span><br><span class="line-number">332</span><br><span class="line-number">333</span><br><span class="line-number">334</span><br><span class="line-number">335</span><br><span class="line-number">336</span><br><span class="line-number">337</span><br><span class="line-number">338</span><br><span class="line-number">339</span><br><span class="line-number">340</span><br><span class="line-number">341</span><br><span class="line-number">342</span><br><span class="line-number">343</span><br><span class="line-number">344</span><br><span class="line-number">345</span><br><span class="line-number">346</span><br><span class="line-number">347</span><br><span class="line-number">348</span><br><span class="line-number">349</span><br><span class="line-number">350</span><br><span class="line-number">351</span><br><span class="line-number">352</span><br><span class="line-number">353</span><br><span class="line-number">354</span><br><span class="line-number">355</span><br><span class="line-number">356</span><br><span class="line-number">357</span><br><span class="line-number">358</span><br><span class="line-number">359</span><br><span class="line-number">360</span><br><span class="line-number">361</span><br><span class="line-number">362</span><br><span class="line-number">363</span><br><span class="line-number">364</span><br><span class="line-number">365</span><br><span class="line-number">366</span><br><span class="line-number">367</span><br><span class="line-number">368</span><br><span class="line-number">369</span><br><span class="line-number">370</span><br><span class="line-number">371</span><br><span class="line-number">372</span><br><span class="line-number">373</span><br><span class="line-number">374</span><br><span class="line-number">375</span><br><span class="line-number">376</span><br><span class="line-number">377</span><br><span class="line-number">378</span><br><span class="line-number">379</span><br><span class="line-number">380</span><br><span class="line-number">381</span><br><span class="line-number">382</span><br><span class="line-number">383</span><br><span class="line-number">384</span><br><span class="line-number">385</span><br><span class="line-number">386</span><br><span class="line-number">387</span><br><span class="line-number">388</span><br><span class="line-number">389</span><br><span class="line-number">390</span><br><span class="line-number">391</span><br><span class="line-number">392</span><br><span class="line-number">393</span><br><span class="line-number">394</span><br><span class="line-number">395</span><br><span class="line-number">396</span><br><span class="line-number">397</span><br><span class="line-number">398</span><br><span class="line-number">399</span><br><span class="line-number">400</span><br><span class="line-number">401</span><br><span class="line-number">402</span><br><span class="line-number">403</span><br><span class="line-number">404</span><br><span class="line-number">405</span><br><span class="line-number">406</span><br><span class="line-number">407</span><br><span class="line-number">408</span><br><span class="line-number">409</span><br><span class="line-number">410</span><br><span class="line-number">411</span><br><span class="line-number">412</span><br><span class="line-number">413</span><br><span class="line-number">414</span><br><span class="line-number">415</span><br><span class="line-number">416</span><br><span class="line-number">417</span><br><span class="line-number">418</span><br><span class="line-number">419</span><br><span class="line-number">420</span><br><span class="line-number">421</span><br><span class="line-number">422</span><br><span class="line-number">423</span><br><span class="line-number">424</span><br><span class="line-number">425</span><br><span class="line-number">426</span><br><span class="line-number">427</span><br><span class="line-number">428</span><br><span class="line-number">429</span><br><span class="line-number">430</span><br><span class="line-number">431</span><br><span class="line-number">432</span><br><span class="line-number">433</span><br><span class="line-number">434</span><br><span class="line-number">435</span><br><span class="line-number">436</span><br><span class="line-number">437</span><br><span class="line-number">438</span><br><span class="line-number">439</span><br><span class="line-number">440</span><br><span class="line-number">441</span><br><span class="line-number">442</span><br><span class="line-number">443</span><br><span class="line-number">444</span><br></div></div></details>',2),t={},o=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,p]of s)n[a]=p;return n}},716:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-50983e60",path:"/clients/controller/basesPagination.html",title:"列表",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"clients/controller/basesPagination.md",git:{updatedTime:1629711116e3,contributors:[{name:"LengYXin",email:"lengyingxin8966@gmail.com",commits:1}]}}}}]);