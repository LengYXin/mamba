"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[950],{7008:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});const p=(0,a(6252).uE)('<h1 id="数据存储" tabindex="-1"><a class="header-anchor" href="#数据存储" aria-hidden="true">#</a> 数据存储</h1><details class="custom-container details"><summary>点击查看代码</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@author</span> 冷 (https://github.com/LengYXin)\n * <span class="token keyword">@email</span> lengyingxin8966@gmail.com\n * <span class="token keyword">@create</span> date 2021-08-23 11:21:30\n * <span class="token keyword">@modify</span> date 2021-08-23 11:21:30\n * <span class="token keyword">@desc</span> [数据存储]\n */</span>\n<span class="token keyword">import</span> lodash <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> action<span class="token punctuation">,</span> observable<span class="token punctuation">,</span> toJS<span class="token punctuation">,</span> isObservable<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;mobx&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> IBaseModelOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./basesInterface&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> persist <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;mobx-persist&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasesOptions<span class="token punctuation">,</span> EnumBasesKeys <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./basesOptions&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Subject<span class="token punctuation">,</span> firstValueFrom<span class="token punctuation">,</span> delay<span class="token punctuation">,</span> <span class="token keyword">of</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasesUtils <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./basesUtils&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">BaseModel<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> IBaseModelOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// BasesOptions.reactive(this);</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onInit</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">readonly</span> options<span class="token operator">:</span> IBaseModelOptions <span class="token operator">=</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;object&#39;</span> <span class="token punctuation">}</span>\n    <span class="token function">onInit</span><span class="token punctuation">(</span>options<span class="token operator">:</span> IBaseModelOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>lodash<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            lodash<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n            <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">case</span> <span class="token string">&#39;list&#39;</span><span class="token operator">:</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n                <span class="token keyword">case</span> <span class="token string">&#39;map&#39;</span><span class="token operator">:</span>\n                <span class="token keyword">case</span> <span class="token string">&#39;object&#39;</span><span class="token operator">:</span>\n                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createHydrate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/** 数据类型 */</span>\n    <span class="token keyword">get</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>type\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 持久化初始化完成 Subject\n     * <span class="token keyword">@type</span> <span class="token punctuation">{</span>Promise&lt;any&gt;<span class="token punctuation">}</span>\n     * <span class="token keyword">@memberof</span> ControllerUser\n     */</span>\n    <span class="token keyword">private</span> <span class="token keyword">readonly</span> HydrateSubject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Subject<span class="token operator">&lt;</span><span class="token keyword">this</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n    * 持久化初始化完成 Promise\n    * <span class="token keyword">@type</span> <span class="token punctuation">{</span>Promise&lt;any&gt;<span class="token punctuation">}</span>\n    * <span class="token keyword">@memberof</span> ControllerUser\n    */</span>\n    <span class="token keyword">get</span> <span class="token function">HydrateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">this</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">firstValueFrom</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>HydrateSubject<span class="token punctuation">,</span> <span class="token punctuation">{</span> defaultValue<span class="token operator">:</span> <span class="token keyword">this</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/** 数据加载状态 */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">observable</span></span>\n    loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/** 存储空间 */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">observable</span></span>\n    <span class="token keyword">protected</span> _storage <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">get</span> <span class="token function">storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">toJS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_storage<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/** 源数据 */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">observable</span></span>\n    <span class="token keyword">protected</span> _value <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/** 原始的 _value */</span>\n    <span class="token keyword">public</span> <span class="token keyword">get</span> <span class="token function">obsValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/** 源数据 */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">public</span> <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">toJS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/** 长度 */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">computed</span></span>\n    <span class="token keyword">public</span> <span class="token keyword">get</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">!==</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;value type not Array&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> lodash<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 设置 值\n     * <span class="token keyword">@param</span> <span class="token parameter">value</span> \n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">action</span></span><span class="token punctuation">.</span>bound\n    <span class="token keyword">public</span> <span class="token function">set</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObservable</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            value <span class="token operator">=</span> <span class="token function">toJS</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">case</span> <span class="token string">&#39;list&#39;</span><span class="token operator">:</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>lodash<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;value type not Array&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token string">&#39;object&#39;</span><span class="token operator">:</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>lodash<span class="token punctuation">.</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;value type not Object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> value<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 获取 值\n     * <span class="token keyword">@param</span> <span class="token parameter">value</span> \n     */</span>\n    <span class="token keyword">public</span> <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> defaultValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">,</span> key<span class="token punctuation">,</span> defaultValue<span class="token punctuation">)</span> <span class="token operator">||</span> defaultValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * merge 值\n     * <span class="token keyword">@param</span> <span class="token parameter">value</span> \n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">action</span></span><span class="token punctuation">.</span>bound\n    <span class="token keyword">public</span> <span class="token function">merge</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;value type not object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObservable</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            value <span class="token operator">=</span> <span class="token function">toJS</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        lodash<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 创建持久化存储\n     * <span class="token keyword">@memberof</span> BaseModel\n     */</span>\n    <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">createHydrate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span> options <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span> storageLoading <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> Hydrate <span class="token operator">=</span> BasesOptions<span class="token punctuation">.</span><span class="token function">createHydrate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token comment">// 模拟慢 几秒</span>\n            <span class="token comment">// await of(1).pipe(delay(3000)).toPromise()</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>storageKey<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> lodash<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>schema<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>HydrateSubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>HydrateSubject<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                storageLoading <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toggleLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n                <span class="token keyword">return</span>\n            <span class="token punctuation">}</span>\n            storageLoading <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toggleLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">let</span> schema <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>storageKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                lodash<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>schema<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                    _value<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    _storage<span class="token operator">:</span> <span class="token punctuation">{</span>\n                        type<span class="token operator">:</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">,</span> schema<span class="token operator">:</span> <span class="token punctuation">{</span>\n                            <span class="token punctuation">[</span>EnumBasesKeys<span class="token punctuation">.</span>finished<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                            <span class="token punctuation">[</span>EnumBasesKeys<span class="token punctuation">.</span>request<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;object&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>lodash<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>schema<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                lodash<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>schema<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                    _storage<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">,</span> schema<span class="token operator">:</span> options<span class="token punctuation">.</span>schema <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n            <span class="token function">persist</span><span class="token punctuation">(</span>schema<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">await</span> <span class="token function">Hydrate</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>storageKey<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            BasesUtils<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">持久化 【 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>options<span class="token punctuation">.</span>storageKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 】</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>HydrateSubject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>HydrateSubject<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token comment">// lodash.invoke(options, &#39;onSuccess&#39;);</span>\n            storageLoading <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toggleLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>HydrateSubject<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>HydrateSubject<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            storageLoading <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toggleLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// lodash.invoke(options, &#39;onError&#39;, error);</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 设置一个 值 到存储空间中\n     * <span class="token keyword">@param</span> <span class="token parameter">key</span> \n     * <span class="token keyword">@param</span> <span class="token parameter">value</span> \n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">action</span></span><span class="token punctuation">.</span>bound\n    <span class="token keyword">public</span> <span class="token function">setStorage</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        lodash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_storage<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 获取 存储空间的一个 值\n     * <span class="token keyword">@param</span> <span class="token parameter">key</span> \n     * <span class="token keyword">@param</span> <span class="token parameter">defaultValue</span> \n     */</span>\n    <span class="token keyword">public</span> <span class="token generic-function"><span class="token function">getStorage</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">P</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> defaultValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">P</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">,</span> key<span class="token punctuation">,</span> defaultValue<span class="token punctuation">)</span> <span class="token operator">||</span> defaultValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 清空 存储空间\n     * <span class="token keyword">@memberof</span> BaseModel\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">action</span></span><span class="token punctuation">.</span>bound\n    <span class="token keyword">public</span> <span class="token function">clearStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_storage <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 切换 加载状态\n     * <span class="token keyword">@param</span> <span class="token parameter">loading</span> \n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">action</span></span><span class="token punctuation">.</span>bound\n    <span class="token keyword">public</span> <span class="token function">toggleLoading</span><span class="token punctuation">(</span>loading<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>loading<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loading<span class="token punctuation">,</span> loading<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> loading<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 插入数据 type:Array 有效\n     * <span class="token keyword">@param</span> <span class="token punctuation">{</span>(T | Array&lt;T&gt;)<span class="token punctuation">}</span> entitys 数据\n     * <span class="token keyword">@param</span> <span class="token punctuation">{</span>boolean<span class="token punctuation">}</span> [first=false] 是否插入到前面\n     * <span class="token keyword">@memberof</span> BaseModel\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">action</span></span><span class="token punctuation">.</span>bound\n    <span class="token keyword">public</span> <span class="token function">insert</span><span class="token punctuation">(</span>entitys<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> first <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">!==</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;value type not Array&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        entitys <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>entitys<span class="token punctuation">)</span> <span class="token operator">?</span> entitys <span class="token operator">:</span> <span class="token punctuation">[</span>entitys<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> value <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            value <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>entitys<span class="token punctuation">,</span> value<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            value <span class="token operator">=</span> lodash<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> entitys<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 修改对象 或者 对象的某个属性 lodash.update\n     * <span class="token keyword">@param</span> <span class="token parameter">updater</span> 修改回调函数\n     * <span class="token keyword">@param</span> <span class="token parameter">path</span> 修改的值路径\n     * <span class="token keyword">@returns</span> \n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">action</span></span><span class="token punctuation">.</span>bound\n    <span class="token keyword">public</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token function-variable function">updater</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span> path<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">updater</span><span class="token punctuation">(</span>lodash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                lodash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">,</span> path<span class="token punctuation">,</span> value<span class="token punctuation">)</span>\n                <span class="token keyword">return</span> value\n            <span class="token punctuation">}</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">value </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> undefined</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token function">updater</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token doc-comment comment">/**\n     * 删除数据 type:Array 有效\n     * <span class="token keyword">@param</span> <span class="token punctuation">{</span>lodash.ListIteratee&lt;unknown&gt;<span class="token punctuation">}</span> predicate \n     * <span class="token keyword">@memberof</span> BaseModel\n     */</span>\n    <span class="token decorator"><span class="token at operator">@</span><span class="token function">action</span></span><span class="token punctuation">.</span>bound\n    <span class="token keyword">public</span> <span class="token keyword">delete</span><span class="token punctuation">(</span>predicate<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">!==</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;value type not Array&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> lodash<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">,</span> predicate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br></div></div></details>',2),t={},o=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,p]of s)n[a]=p;return n}},2705:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-9cfc0a98",path:"/clients/controller/baseModel.html",title:"数据存储",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"clients/controller/baseModel.md",git:{updatedTime:1629711116e3,contributors:[{name:"LengYXin",email:"lengyingxin8966@gmail.com",commits:1}]}}}}]);